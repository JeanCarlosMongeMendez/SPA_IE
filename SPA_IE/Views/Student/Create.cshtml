@model SPA_IE.Models.Data.DTO.StudentDTO

@using (Html.BeginForm("Create", "Student", FormMethod.Post, new { role = "form", id = "addStudentForm"}))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <label class="col-md-2">Usuario</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2">Contraseña</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none">
            <label class="col-md-2">Foto</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserPhoto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserPhoto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2">Intereses</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Interests, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Interests, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2">Email</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2">Provincia</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdProvince, ViewBag.provinces as SelectList, " -- Seleccionar provincia -- ", htmlAttributes: new { @class = "form-control", @onchange="ddlProvince(this.value)"})
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2">Canton</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdCanton, ViewBag.cantons as SelectList, " -- Seleccionar canton -- ", htmlAttributes: new { @class = "form-control", @onchange="ddlCanton(this.value)"})
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2">Distrito</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdDistrict, ViewBag.districts as SelectList, " -- Seleccionar distrito -- ", htmlAttributes: new { @class = "form-control"})
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2">Carnet</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdentificationCard, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IdentificationCard, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2">Miembro de ASIP</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.isASIP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.isASIP, "", new { @class = "text-danger" })
            </div>
        </div>
        
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
